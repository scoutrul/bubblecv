import { test, expect } from '@playwright/test'

test.describe('üèÜ Achievements Flow', () => {
  test('–¥–æ–ª–∂–µ–Ω –≤—ã–¥–∞–≤–∞—Ç—å –∞—á–∏–≤–∫—É "–°–∏–ª–∞—á" –∑–∞ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∫—Ä–µ–ø–∫–æ–≥–æ –ø—É–∑—ã—Ä—è', async ({ page }) => {
    await page.goto('/')

    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—É–∑—ã—Ä–µ–π –Ω–∞ —Ö–æ–ª—Å—Ç–µ
    await expect(page.locator('[data-testid^="bubble-"]')).not.toHaveCount(0, { timeout: 10000 })

    const toughBubbleId = 'git'
    const toughBubbleClicks = 3 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 3 –∫–ª–∏–∫–∞
    const toughBubbleSelector = `[data-testid="bubble-${toughBubbleId}"]`

    // –ù–∞—Ö–æ–¥–∏–º –∫—Ä–µ–ø–∫–∏–π –ø—É–∑—ã—Ä—å
    const toughBubble = page.locator(toughBubbleSelector)
    await expect(toughBubble).toBeVisible()

    // –ö–ª–∏–∫–∞–µ–º –ø–æ –Ω–µ–º—É –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑
    for (let i = 0; i < toughBubbleClicks; i++) {
      await test.step(`–ö–ª–∏–∫ –ø–æ –∫—Ä–µ–ø–∫–æ–º—É –ø—É–∑—ã—Ä—é #${i + 1}`, async () => {
        await toughBubble.click({ force: true }) // force: true, —Ç.–∫. –ø—É–∑—ã—Ä—å –º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è
      })
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—è–≤–∏–ª–æ—Å—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞—á–∏–≤–∫–∏
    await test.step('–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∞—á–∏–≤–∫–∏', async () => {
      const achievementModal = page.locator('[data-testid="achievement-modal"]')
      await expect(achievementModal).toBeVisible({ timeout: 5000 })
      await expect(achievementModal.locator('h2')).toHaveText('–°–∏–ª–∞—á')
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –∞—á–∏–≤–∫–∏
      await achievementModal.locator('button', { hasText: '–ö—Ä—É—Ç–æ!' }).click()
      await expect(achievementModal).not.toBeVisible()
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–µ–¥–æ–º –æ—Ç–∫—Ä—ã–ª–æ—Å—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–∞–º–æ–≥–æ –ø—É–∑—ã—Ä—è
    await test.step('–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—É–∑—ã—Ä—è', async () => {
      const bubbleModal = page.locator('[data-testid="bubble-modal"]')
      await expect(bubbleModal).toBeVisible()
      await expect(bubbleModal.locator('h2')).toHaveText('Git')

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
      await bubbleModal.locator('button', { hasText: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' }).click()
      await expect(bubbleModal).not.toBeVisible()
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É–∑—ã—Ä—å –∏—Å—á–µ–∑
    await test.step('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –ø—É–∑—ã—Ä—è', async () => {
      await expect(toughBubble).not.toBeVisible({ timeout: 2000 })
    })
  })
}) 