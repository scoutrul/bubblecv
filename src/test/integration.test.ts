import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest'
import { setActivePinia } from 'pinia'
import { createTestPinia } from './helpers/pinia-helpers'
import { server, http, HttpResponse } from './mocks/server'
import { mockBubbles } from './fixtures/bubbles'
import { mockAchievements } from './fixtures/achievements'
import { useBubbleStore } from '@/stores/bubble.store'
import { useGameStore } from '@/stores/game.store'
import { useSessionStore } from '@/stores/session.store'
import { useModalStore } from '@/stores/modal.store'
import { GAME_CONFIG } from '@shared/config/game-config'

// –ú–æ–∫–∏—Ä—É–µ–º –∞—Å—Å–µ—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥–∏
vi.mock('@/shared/assets/achievements', () => ({
  allAchievements: mockAchievements
}))

vi.mock('@shared/config/game-config', () => ({
  GAME_CONFIG: {
    levelRequirements: { 1: 0, 2: 100, 3: 250 },
    xpPerBubble: 20,
    achievementXP: {
      basic: 10,
      intermediate: 20,
      advanced: 50,
      master: 100
    }
  }
}))

describe('üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–æ–ª–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª', () => {
  let bubbleStore: ReturnType<typeof useBubbleStore>
  let gameStore: ReturnType<typeof useGameStore>
  let sessionStore: ReturnType<typeof useSessionStore>
  let modalStore: ReturnType<typeof useModalStore>

  beforeEach(async () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–µ–π–∫–æ–≤—ã–µ —Ç–∞–π–º–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    vi.useFakeTimers({ shouldAdvanceTime: true })
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–∫-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ —ç—Ç–æ–º —Å—å—é—Ç–µ
    server.use(
      http.get('/api/bubbles', () => {
        return HttpResponse.json({ success: true, data: mockBubbles })
      }),
      http.get('/api/content-levels', () => {
        return HttpResponse.json({
          levels: [
            { level: 1, title: '–ù–æ–≤–∏—á–æ–∫', xpRequired: 0 },
            { level: 2, title: '–£—á–µ–Ω–∏–∫', xpRequired: 100 },
            { level: 3, title: '–ó–Ω–∞—Ç–æ–∫', xpRequired: 250 }
          ]
        })
      })
    )

    // –°–æ–∑–¥–∞–µ–º —Å–≤–µ–∂–∏–π Pinia –∏ —Å—Ç–æ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
    setActivePinia(createTestPinia())
    bubbleStore = useBubbleStore()
    gameStore = useGameStore()
    sessionStore = useSessionStore()
    modalStore = useModalStore()

    // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
    await Promise.all([
      bubbleStore.loadBubbles(),
      gameStore.loadContentLevels(),
      sessionStore.loadSession()
    ])
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    sessionStore.$patch({
      session: {
        id: 'test-session',
        currentXP: 0,
        currentLevel: 1,
        lives: 3,
        unlockedContent: [],
        visitedBubbles: [],
        agreementScore: 0,
        gameCompleted: false,
        hasDestroyedToughBubble: false,
        startTime: new Date(),
        lastActivity: new Date()
      }
    })
  })

  afterEach(() => {
    server.resetHandlers()
    vi.restoreAllMocks()
    vi.useRealTimers()
  })

  it('–¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ñ–ª–æ—É: –ª–æ–ø–Ω—É—Ç—å –ø—É–∑—ã—Ä–∏ -> –ø–æ–ª—É—á–∏—Ç—å XP -> –ø–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å -> –ø–æ–ª—É—á–∏—Ç—å –∞—á–∏–≤–∫—É', async () => {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    vi.setConfig({ testTimeout: 20000 })
    
    // 1. –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    expect(sessionStore.currentXP).toBe(0)
    expect(sessionStore.currentLevel).toBe(1)
    expect(gameStore.unlockedAchievements.length).toBe(0)

    // 2. "–õ–æ–ø–Ω—É—Ç—å" 5 –ø—É–∑—ã—Ä–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 100 XP (5 * 20)
    for (let i = 0; i < 5; i++) {
      const bubble = bubbleStore.bubbles[i]
      bubbleStore.popBubble(bubble.id)
      await sessionStore.gainXP(GAME_CONFIG.xpPerBubble)
      // –ü—Ä–æ–¥–≤–∏–≥–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
      await vi.advanceTimersByTimeAsync(10)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è XP
    // 100 XP –∑–∞ –ø—É–∑—ã—Ä–∏ + 10 XP –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 'first-level-master'
    expect(sessionStore.currentXP).toBe(110) 
    expect(sessionStore.currentLevel).toBe(2) // –î–æ–ª–∂–µ–Ω –±—ã–ª –ø–æ–≤—ã—Å–∏—Ç—å—Å—è —É—Ä–æ–≤–µ–Ω—å
    
    // 3.1. –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞–ª –±—ã `useBubbleManager`
    modalStore.openLevelUpModal(2, { level: 2 })
    await vi.advanceTimersByTimeAsync(10)

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∑–∞ 10 –ø—É–∑—ã—Ä–µ–π –µ—â–µ –ù–ï –ø–æ–ª—É—á–µ–Ω–æ
    let achievement = gameStore.achievements.find(a => a.id === 'bubble-explorer-10')
    expect(achievement?.isUnlocked).toBe(false)
    
    // 5. "–õ–æ–ø–Ω—É—Ç—å" –µ—â–µ 5 –ø—É–∑—ã—Ä–µ–π
    let poppedCount = 5
    for (let i = 5; i < 10; i++) {
      const bubble = bubbleStore.bubbles[i]
      bubbleStore.popBubble(bubble.id)
      poppedCount++
      await sessionStore.gainXP(GAME_CONFIG.xpPerBubble)
      gameStore.checkAndUnlockBubbleAchievements(poppedCount)
      // –ü—Ä–æ–¥–≤–∏–≥–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
      await vi.advanceTimersByTimeAsync(10)
    }
    
    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    achievement = gameStore.achievements.find(a => a.id === 'bubble-explorer-10')
    expect(achievement?.isUnlocked).toBe(true)

    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É –æ—á–µ—Ä–µ–¥–∏ –º–æ–¥–∞–ª–æ–∫
    // LevelUp –º–æ–¥–∞–ª–∫–∞ –≤—Å–µ –µ—â–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞
    expect(modalStore.isLevelUpModalOpen).toBe(true) 
    // –ú–æ–¥–∞–ª–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ù–ï –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è, –∞ –¥–æ–ª–∂–Ω–∞ –≤—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å
    expect(modalStore.isAchievementModalOpen).toBe(false)

    // 8. –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
    modalStore.closeLevelUpModal()
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    await vi.advanceTimersByTimeAsync(50)

    // –ü–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è LevelUp –º–æ–¥–∞–ª–∫–∏, –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –º–æ–¥–∞–ª–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (–ü–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü)
    expect(modalStore.isAchievementModalOpen).toBe(true)
    expect(modalStore.achievementData?.title).toBe('–ü–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü')

    // 9. –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    modalStore.closeAchievementModal()
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    await vi.advanceTimersByTimeAsync(50)
    
    // 10. –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –º–æ–¥–∞–ª–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏ (–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ø—É–∑—ã—Ä–µ–π)
    expect(modalStore.isAchievementModalOpen).toBe(true)
    expect(modalStore.achievementData?.title).toBe(achievement?.name) // achievement –∑–¥–µ—Å—å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ bubble-explorer-10
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
    vi.setConfig({ testTimeout: 5000 })
  })
}) 