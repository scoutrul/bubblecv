import { defineStore } from 'pinia'
import { ref } from 'vue'
import type { Achievement, ContentLevel } from '@shared/types'
import contentLevelsData from '@shared/data/contentLevels.json'
import { GAME_CONFIG } from '@shared/config/game-config'

export const useGameStore = defineStore('game', () => {
  const achievements = ref<Achievement[]>([])
  const contentLevels = ref<ContentLevel[]>([])

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–Ω–∏ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ XP —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏
  const loadContentLevels = () => {
    const levelsWithUpdatedXP = contentLevelsData.levels.map((level, index) => {
      // –ü–æ–ª—É—á–∞–µ–º XP —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ game-config
      const xpRequiredMap = {
        1: 0,  // –ü–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å - —Å—Ç–∞—Ä—Ç–æ–≤—ã–π
        2: GAME_CONFIG.XP_LEVELS.LEVEL_1, // 22 XP
        3: GAME_CONFIG.XP_LEVELS.LEVEL_2, // 44 XP  
        4: GAME_CONFIG.XP_LEVELS.LEVEL_3, // 66 XP
        5: GAME_CONFIG.XP_LEVELS.LEVEL_4  // 88 XP
      }
      
      return {
        ...level,
        xpRequired: xpRequiredMap[level.level as keyof typeof xpRequiredMap] || level.xpRequired
      } as ContentLevel
    })
    
    contentLevels.value = levelsWithUpdatedXP
    console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω—ã —É—Ä–æ–≤–Ω–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', contentLevels.value.map(l => ({ level: l.level, title: l.title, xpRequired: l.xpRequired })))
  }

  const getLevelByNumber = (level: number) => {
    return contentLevels.value.find(l => l.level === level)
  }

  // –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const initializeAchievements = () => {
    achievements.value = [
      {
        id: 'secret-bubble-discoverer',
        name: '–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
        description: '–í—ã –Ω–∞—à–ª–∏ —Å–∫—Ä—ã—Ç—ã–π –ø—É–∑—ã—Ä—å! –ù–∞—Å—Ç–æ—è—â–∏–µ —Ç–∞–ª–∞–Ω—Ç—ã —É–º–µ—é—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–∞–º, –≥–¥–µ –∏—Ö –Ω–µ –≤–∏–¥—è—Ç –¥—Ä—É–≥–∏–µ.',
        icon: 'üïµÔ∏è',
        isUnlocked: false,
        xpReward: 10
      },
      {
        id: 'philosophy-master',
        name: '–§–∏–ª–æ—Å–æ—Ñ',
        description: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å! –ú—É–¥—Ä–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –≥–æ—Ç–æ–≤ —Ä–∞–∑–º—ã—à–ª—è—Ç—å.',
        icon: 'ü§î',
        isUnlocked: false,
        xpReward: 10
      },
      {
        id: 'on-the-edge',
        name: '–ù–∞ –∫—Ä–∞—é',
        description: '–£ –≤–∞—Å –æ—Å—Ç–∞–ª–∞—Å—å –≤—Å–µ–≥–æ –æ–¥–Ω–∞ –∂–∏–∑–Ω—å! –ò–Ω–æ–≥–¥–∞ –ª—É—á—à–∏–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º.',
        icon: 'üî•',
        isUnlocked: false,
        xpReward: 10
      },
      {
        id: 'first-level-master',
        name: '–ü–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü',
        description: '–î–æ—Å—Ç–∏–≥–ª–∏ 1-–≥–æ —É—Ä–æ–≤–Ω—è! –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ —Ç—ã—Å—è—á—É –º–∏–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞.',
        icon: 'üöÄ',
        isUnlocked: false,
        xpReward: 10
      },
      // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–∑—ã—Ä–µ–π
      {
        id: 'bubble-explorer-10',
        name: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
        description: '–ò–∑—É—á–∏–ª–∏ 10 –ø—É–∑—ã—Ä–µ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π! –õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ - –¥–≤–∏–≥–∞—Ç–µ–ª—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.',
        icon: 'üîç',
        isUnlocked: false,
        xpReward: 10
      },
      {
        id: 'bubble-explorer-30',
        name: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º',
        description: '–ò–∑—É—á–∏–ª–∏ 30 –ø—É–∑—ã—Ä–µ–π! –®–∏—Ä–æ–∫–∏–π –∫—Ä—É–≥–æ–∑–æ—Ä - –æ—Å–Ω–æ–≤–∞ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞.',
        icon: 'üéØ',
        isUnlocked: false,
        xpReward: 15
      },
      {
        id: 'bubble-explorer-50',
        name: '–ú–∞—Å—Ç–µ—Ä –≤—Å–µ—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        description: '–ò–∑—É—á–∏–ª–∏ 50 –ø—É–∑—ã—Ä–µ–π! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –≥—É—Ä—É –≤ –º–∏—Ä–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.',
        icon: 'üèÜ',
        isUnlocked: false,
        xpReward: 20
      },
      // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∑–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
      {
        id: 'final-level-master',
        name: '–§–∏–Ω–∞–ª–∏—Å—Ç',
        description: '–î–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è! –í—ã –ø—Ä–æ—à–ª–∏ –≤–µ—Å—å –ø—É—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è –∏ —Å—Ç–∞–ª–∏ –Ω–∞—Å—Ç–æ—è—â–∏–º —ç–∫—Å–ø–µ—Ä—Ç–æ–º.',
        icon: 'üéñÔ∏è',
        isUnlocked: false,
        xpReward: 25
      },
      // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∑–∞ –ø–µ—Ä–≤—ã–π –∫—Ä–µ–ø–∫–∏–π –ø—É–∑—ã—Ä—å
      {
        id: 'first-tough-bubble',
        name: '–£–ø–æ—Ä—Å—Ç–≤–æ',
        description: '–†–∞–∑–±–∏–ª–∏ –ø–µ—Ä–≤—ã–π –∫—Ä–µ–ø–∫–∏–π –ø—É–∑—ã—Ä—å! –ù–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.',
        icon: 'üí™',
        isUnlocked: false,
        xpReward: 15
      }
    ]
  }

  const unlockAchievement = (achievementId: string): Achievement | null => {
    const achievement = achievements.value.find(a => a.id === achievementId)
    if (achievement && !achievement.isUnlocked) {
      achievement.isUnlocked = true
      achievement.unlockedAt = new Date()
      console.log('üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', achievement.name)
      return achievement
    }
    return null
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É—Ä–æ–≤–Ω–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ store
  loadContentLevels()
  initializeAchievements()

  return {
    achievements,
    contentLevels,
    getLevelByNumber,
    loadContentLevels,
    unlockAchievement
  }
}) 